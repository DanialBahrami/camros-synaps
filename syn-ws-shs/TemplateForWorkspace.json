{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "syn-ws-shs"
		},
		"ls_adls_shs_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_shs'"
		},
		"syn-ws-shs-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'syn-ws-shs-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:syn-ws-shs.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"ls_adls_shs_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsshs.dfs.core.windows.net/"
		},
		"ls_http_dynamic_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().p_ls_http_url}"
		},
		"syn-ws-shs-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsshs.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/pl_csv_parquet')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get File Names",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls_edp_raw_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File Names",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File Names').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Notebook Spark CSV to Parquet",
									"type": "SynapseNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebook": {
											"referenceName": "spark_csv_parquet_england",
											"type": "NotebookReference"
										},
										"parameters": {
											"filename": {
												"value": {
													"value": "@item()['name']",
													"type": "Expression"
												},
												"type": "string"
											},
											"current_time": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "string"
											}
										},
										"snapshot": true,
										"sparkPool": {
											"referenceName": "sparkpoolshs",
											"type": "BigDataPoolReference"
										},
										"executorSize": "Small",
										"conf": {
											"spark.dynamicAllocation.enabled": null,
											"spark.dynamicAllocation.minExecutors": null,
											"spark.dynamicAllocation.maxExecutors": null
										},
										"driverSize": "Small",
										"numExecutors": null
									}
								},
								{
									"name": "Move Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Notebook Spark CSV to Parquet",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_adls_edp_raw_file",
											"type": "DatasetReference",
											"parameters": {
												"p_ds_filename": {
													"value": "@item()['name']",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_edp_moved",
											"type": "DatasetReference",
											"parameters": {
												"p_ds_filename": {
													"value": "@concat(utcnow(),'_',item()['name'])",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Delete File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Move Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_adls_edp_raw_file",
											"type": "DatasetReference",
											"parameters": {
												"p_ds_filename": {
													"value": "@item()['name']",
													"type": "Expression"
												}
											}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_adls_shs",
												"type": "LinkedServiceReference"
											},
											"path": "container-epd/logs"
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": false,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_adls_edp_raw_folder')]",
				"[concat(variables('workspaceId'), '/notebooks/spark_csv_parquet_england')]",
				"[concat(variables('workspaceId'), '/bigDataPools/sparkpoolshs')]",
				"[concat(variables('workspaceId'), '/datasets/ds_adls_edp_raw_file')]",
				"[concat(variables('workspaceId'), '/datasets/ds_adls_edp_moved')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_shs')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/pl_http_csv_adls')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get List of Resources",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://opendata.nhsbsa.net/api/3/action/package_show?id=', string(pipeline().parameters.p_pl_dataset))",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							}
						}
					},
					{
						"name": "For Each Resource",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get List of Resources",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of Resources').output['result']['resources']",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy CSV to ADLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set URL",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set File Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_http_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"p_ds_url": {
													"value": "@variables('v_pl_url')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_edp_raw_file",
											"type": "DatasetReference",
											"parameters": {
												"p_ds_filename": {
													"value": "@concat(variables('v_pl_name'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set URL",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_pl_url",
										"value": {
											"value": "@item()['url']",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set File Name",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "v_pl_name",
										"value": {
											"value": "@item()['name']",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_pl_dataset": {
						"type": "string",
						"defaultValue": "english-prescribing-data-epd"
					}
				},
				"variables": {
					"v_pl_url": {
						"type": "String"
					},
					"v_pl_name": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/ds_http_dynamic')]",
				"[concat(variables('workspaceId'), '/datasets/ds_adls_edp_raw_file')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_adls_edp_moved')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_shs",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_ds_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_ds_filename",
							"type": "Expression"
						},
						"folderPath": "moved",
						"fileSystem": "container-epd"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_shs')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_adls_edp_raw_file')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_shs",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_ds_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_ds_filename",
							"type": "Expression"
						},
						"folderPath": "raw",
						"fileSystem": "container-epd"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "YEAR_MONTH",
						"type": "String"
					},
					{
						"name": "REGIONAL_OFFICE_NAME",
						"type": "String"
					},
					{
						"name": "REGIONAL_OFFICE_CODE",
						"type": "String"
					},
					{
						"name": "ICB_NAME",
						"type": "String"
					},
					{
						"name": "ICB_CODE",
						"type": "String"
					},
					{
						"name": "PCO_NAME",
						"type": "String"
					},
					{
						"name": "PCO_CODE",
						"type": "String"
					},
					{
						"name": "PRACTICE_NAME",
						"type": "String"
					},
					{
						"name": "PRACTICE_CODE",
						"type": "String"
					},
					{
						"name": "ADDRESS_1",
						"type": "String"
					},
					{
						"name": "ADDRESS_2",
						"type": "String"
					},
					{
						"name": "ADDRESS_3",
						"type": "String"
					},
					{
						"name": "ADDRESS_4",
						"type": "String"
					},
					{
						"name": "POSTCODE",
						"type": "String"
					},
					{
						"name": "BNF_CHEMICAL_SUBSTANCE",
						"type": "String"
					},
					{
						"name": "CHEMICAL_SUBSTANCE_BNF_DESCR",
						"type": "String"
					},
					{
						"name": "BNF_CODE",
						"type": "String"
					},
					{
						"name": "BNF_DESCRIPTION",
						"type": "String"
					},
					{
						"name": "BNF_CHAPTER_PLUS_CODE",
						"type": "String"
					},
					{
						"name": "QUANTITY",
						"type": "String"
					},
					{
						"name": "ITEMS",
						"type": "String"
					},
					{
						"name": "TOTAL_QUANTITY",
						"type": "String"
					},
					{
						"name": "ADQUSAGE",
						"type": "String"
					},
					{
						"name": "NIC",
						"type": "String"
					},
					{
						"name": "ACTUAL_COST",
						"type": "String"
					},
					{
						"name": "UNIDENTIFIED",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_shs')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_adls_edp_raw_folder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_shs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw",
						"fileSystem": "container-epd"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_adls_shs')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_http_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_dynamic",
					"type": "LinkedServiceReference",
					"parameters": {
						"p_ls_http_url": {
							"value": "@dataset().p_ds_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"p_ds_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_http_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_adls_shs')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_shs_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_shs_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_http_dynamic')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"p_ls_http_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_dynamic_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_syn_shs_powerbi')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "19c7ad6a-f928-4383-afde-5aee65d1c076",
					"tenantID": "44bb8895-fe47-42e3-b8d6-04104af43346"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-ws-shs-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('syn-ws-shs-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/syn-ws-shs-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('syn-ws-shs-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/brz_crt_tbl_england')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ldw/bronze"
				},
				"content": {
					"query": "USE epd_ldw\nGO\n\nIF OBJECT_ID('bronze.england') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.england;\n\nCREATE EXTERNAL TABLE bronze.england (\n\t[YEAR_MONTH][BIGINT] NULL,\n\t[REGIONAL_OFFICE_NAME][varchar](500) NULL,\n\t[REGIONAL_OFFICE_CODE][varchar](500) NULL,\n\t[ICB_NAME][varchar](500) NULL,\n\t[ICB_CODE][varchar](500) NULL,\n\t[PCO_NAME][varchar](500) NULL,\n\t[PCO_CODE][varchar](500) NULL,\n\t[PRACTICE_NAME][varchar](500) NULL,\n\t[PRACTICE_CODE][varchar](500) NULL,\n\t[ADDRESS_1][varchar](500) NULL,\n\t[ADDRESS_2][varchar](500) NULL,\n\t[ADDRESS_3][varchar](500) NULL,\n\t[ADDRESS_4][varchar](500) NULL,\n\t[POSTCODE][varchar](500) NULL,\n\t[BNF_CHEMICAL_SUBSTANCE][varchar](500) NULL,\n\t[CHEMICAL_SUBSTANCE_BNF_DESCR][varchar](500) NULL,\n\t[BNF_CODE][varchar](500) NULL,\n\t[BNF_DESCRIPTION][varchar](500) NULL,\n\t[BNF_CHAPTER_PLUS_CODE][varchar](500) NULL,\n\t[QUANTITY][FLOAT] NULL,\n\t[ITEMS][INT] NULL,\n\t[TOTAL_QUANTITY][FLOAT] NULL,\n\t[ADQUSAGE][FLOAT] NULL,\n\t[NIC][FLOAT] NULL,\n\t[ACTUAL_COST][FLOAT] NULL,\n\t[UNIDENTIFIED][varchar](500) NULL\n\t)\n\tWITH (\n\tLOCATION = 'raw/EPD_201401.csv'\n\t,DATA_SOURCE = epd_src\n\t,FILE_FORMAT = csv_file_format_pv1\n\t)\nGO\n\n\nSELECT TOP 100 * FROM bronze.england\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "epd_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cost_control_sqlpool')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "utils"
				},
				"content": {
					"query": "SELECT * FROM sys.dm_external_data_processed;\n\nSELECT * FROM sys.configurations\nWHERE name LIKE 'Data Processed %';\n\nsp_set_data_processed_limit\n    @type = N'monthly',\n    @limit_tb = 2;\n\nsp_set_data_processed_limit\n    @type = N'weekly',\n    @limit_tb = 1;\n\nsp_set_data_processed_limit\n    @type = N'daily',\n    @limit_tb = 1;   ",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/crt_dbs')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ldw"
				},
				"content": {
					"query": "USE master\nGO\n\nCREATE DATABASE epd_ldw\nGO\n\nALTER DATABASE epd_ldw COLLATE Latin1_General_100_BIN2_UTF8\nGO\n\nUSE epd_ldw\nGO\n\nCREATE SCHEMA bronze\nGO\n\nCREATE SCHEMA silver\nGO\n\nCREATE SCHEMA gold\nGO\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/crt_ext_ds')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ldw"
				},
				"content": {
					"query": "USE epd_ldw;\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'epd_src')\n    CREATE EXTERNAL DATA SOURCE epd_src\n    WITH\n    (    LOCATION         = 'https://dlsshs.dfs.core.windows.net/container-epd'\n    );\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/crt_ext_fileformat')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ldw"
				},
				"content": {
					"query": "USE epd_ldw;\n\n-- Create file format csv_file_format for parser version 2.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='csv_file_format')\n  CREATE EXTERNAL FILE FORMAT csv_file_format  \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = ','  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '2.0' )   \n      );  \n\n-- Create file format csv_file_format_pv1 for parser version 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='csv_file_format_pv1')\n  CREATE EXTERNAL FILE FORMAT csv_file_format_pv1 \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = ','  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '1.0' )   \n      );  \n\n-- Create external file format for parquet_file_format\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='parquet_file_format')\n  CREATE EXTERNAL FILE FORMAT parquet_file_format  \n  WITH (  \n        FORMAT_TYPE = PARQUET,  \n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'  \n       ); \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/svr_crt_tbl_england')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "ldw/silver"
				},
				"content": {
					"query": "USE epd_ldw\nGO\n\nIF OBJECT_ID('silver.england') IS NOT NULL\n    DROP EXTERNAL TABLE silver.england;\n\nCREATE EXTERNAL TABLE silver.england (\n\t[YEAR][INT] NULL,\n\t[MONTH][INT] NULL,\n\t[REGIONAL_OFFICE_NAME][varchar](500) NULL,\n\t[REGIONAL_OFFICE_CODE][varchar](500) NULL,\n\t[ICB_NAME][varchar](500) NULL,\n\t[ICB_CODE][varchar](500) NULL,\n\t[PCO_NAME][varchar](500) NULL,\n\t[PCO_CODE][varchar](500) NULL,\n\t[PRACTICE_NAME][varchar](500) NULL,\n\t[PRACTICE_CODE][varchar](500) NULL,\n\t[ADDRESS_1][varchar](500) NULL,\n\t[ADDRESS_2][varchar](500) NULL,\n\t[ADDRESS_3][varchar](500) NULL,\n\t[ADDRESS_4][varchar](500) NULL,\n\t[POSTCODE][varchar](500) NULL,\n\t[BNF_CHEMICAL_SUBSTANCE][varchar](500) NULL,\n\t[CHEMICAL_SUBSTANCE_BNF_DESCR][varchar](500) NULL,\n\t[BNF_CODE][varchar](500) NULL,\n\t[BNF_DESCRIPTION][varchar](500) NULL,\n\t[BNF_CHAPTER_PLUS_CODE][varchar](500) NULL,\n\t[QUANTITY][FLOAT] NULL,\n\t[ITEMS][INT] NULL,\n\t[TOTAL_QUANTITY][FLOAT] NULL,\n\t[ADQUSAGE][FLOAT] NULL,\n\t[NIC][FLOAT] NULL,\n\t[ACTUAL_COST][FLOAT] NULL,\n\t[UNIDENTIFIED][varchar](500) NULL\n\t)\n\tWITH (\n\tLOCATION = '/refined/**',\n    DATA_SOURCE = epd_src,\n    FILE_FORMAT = parquet_file_format\n\t)\n\n\n--SELECT COUNT(*) FROM silver.england",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "epd_ldw",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/spark_csv_parquet_england')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "sparkpoolshs",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "8a54a7a6-bba1-44cf-8ccb-d8c722e3aa50"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/327d3d2b-5fad-4059-9ee2-3fd8fe732331/resourceGroups/rg-shs-southuk/providers/Microsoft.Synapse/workspaces/syn-ws-shs/bigDataPools/sparkpoolshs",
						"name": "sparkpoolshs",
						"type": "Spark",
						"endpoint": "https://syn-ws-shs.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpoolshs",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 10
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": [
								"parameters"
							]
						},
						"source": [
							"filename = 'filename'\n",
							"current_time = '1970-01-01 00:00:00'"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql import SparkSession\n",
							"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, FloatType\n",
							"\n",
							"# Define paths\n",
							"raw_zone_path = \"abfss://container-epd@dlsshs.dfs.core.windows.net/raw/\"\n",
							"refined_zone_path = \"abfss://container-epd@dlsshs.dfs.core.windows.net/refined/\"\n",
							"\n",
							"\n",
							"# Define schema\n",
							"schema = StructType([\n",
							"  StructField(\"YEAR_MONTH\", IntegerType(), True),\n",
							"  StructField(\"REGIONAL_OFFICE_NAME\", StringType(), True),\n",
							"  StructField(\"REGIONAL_OFFICE_CODE\", StringType(), True),\n",
							"  StructField(\"ICB_NAME\", StringType(), True),\n",
							"  StructField(\"ICB_CODE\", StringType(), True),\n",
							"  StructField(\"PCO_NAME\", StringType(), True),\n",
							"  StructField(\"PCO_CODE\", StringType(), True),\n",
							"  StructField(\"PRACTICE_NAME\", StringType(), True),\n",
							"  StructField(\"PRACTICE_CODE\", StringType(), True),\n",
							"  StructField(\"ADDRESS_1\", StringType(), True),\n",
							"  StructField(\"ADDRESS_2\", StringType(), True),\n",
							"  StructField(\"ADDRESS_3\", StringType(), True),\n",
							"  StructField(\"ADDRESS_4\", StringType(), True),\n",
							"  StructField(\"POSTCODE\", StringType(), True),\n",
							"  StructField(\"BNF_CHEMICAL_SUBSTANCE\", StringType(), True),\n",
							"  StructField(\"CHEMICAL_SUBSTANCE_BNF_DESCR\", StringType(), True),\n",
							"  StructField(\"BNF_CODE\", StringType(), True),\n",
							"  StructField(\"BNF_DESCRIPTION\", StringType(), True),\n",
							"  StructField(\"BNF_CHAPTER_PLUS_CODE\", StringType(), True),\n",
							"  StructField(\"QUANTITY\", FloatType(), True),\n",
							"  StructField(\"ITEMS\", IntegerType(), True),\n",
							"  StructField(\"TOTAL_QUANTITY\", FloatType(), True),\n",
							"  StructField(\"ADQUSAGE\", FloatType(), True),\n",
							"  StructField(\"NIC\", FloatType(), True),\n",
							"  StructField(\"ACTUAL_COST\", FloatType(), True),\n",
							"  StructField(\"UNIDENTIFIED\", StringType(), True)\n",
							"])\n",
							"\n",
							"# Initialize Spark session\n",
							"spark = SparkSession.builder \\\n",
							"    .appName(\"CSV to Parquet England\") \\\n",
							"    .getOrCreate()"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from pyspark.sql.functions import col, split, to_timestamp, lit\n",
							"\n",
							"# Read CSV file with header, enforcing schema\n",
							"df = spark.read.option(\"header\", \"true\").schema(schema).csv(raw_zone_path + filename)\n",
							"\n",
							"# Extract year and month from YEAR_MONTH\n",
							"df = df.withColumn(\"YEAR\", col(\"YEAR_MONTH\").cast(\"string\").substr(1, 4).cast(\"int\"))\n",
							"df = df.withColumn(\"MONTH\", col(\"YEAR_MONTH\").cast(\"string\").substr(5, 2).cast(\"int\"))\n",
							"\n",
							"df = df.withColumn(\"m_source_filename\", lit(filename))\n",
							"df = df.withColumn(\"m_ingestion_time\", to_timestamp(lit(current_time)))\n",
							"\n",
							"\n",
							"# Convert to Parquet with partitioning on existing YEAR_MONTH column and append mode\n",
							"df.write.partitionBy(\"YEAR_MONTH\").parquet(refined_zone_path, mode=\"append\")\n",
							"\n",
							"# Stop Spark session\n",
							"spark.stop()"
						],
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkpoolshs')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 0,
					"minNodeCount": 0
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "uksouth"
		}
	]
}